--=======================================================
--  This code is generated by https://datacipy.cz/tools/kitgen
--=======================================================

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.NUMERIC_STD.ALL;

ENTITY Binary_counter16 IS
	PORT (
		--------- CLOCK ---------
		CLK_50 : IN std_logic;
		--------- KEY ---------
		KEY : IN std_logic_vector(3 DOWNTO 0);
		--------- SEG7 ---------
		DIGIT : OUT std_logic_vector(3 DOWNTO 0) := "1111";
		SEGMENT : OUT std_logic_vector(7 DOWNTO 0) := "11111111"
	);
END ENTITY;

ARCHITECTURE rtl OF Binary_counter16 IS
	--=======================================================
	--  SIGNAL declarations
	--=======================================================
	SIGNAL out16b : std_logic_vector(15 DOWNTO 0) := x"0000";
	SIGNAL clk_1k : std_logic;
	SIGNAL clk_4hz : std_logic;

BEGIN

	--=======================================================
	--  Structural coding
	--=======================================================

	-- delicka frekvence pro LED displej
	-- bez ni je obnovovani prilis rychle a displej necitelny

	divider : ENTITY work.freqdiv PORT MAP (clk => clk_50, clkout => clk_1k);

	-- Multiplexovany displej LED

	disp : ENTITY work.segmuxnum PORT MAP (clk_1k, unsigned(out16b),
		segment(0), segment(1), segment(2), segment(3),
		segment(4), segment(5), segment(6), segment(7),
		digit(0), digit(1), digit(2), digit(3));

	-- Citac BCD
	-- automaticky
	cnt_b : ENTITY work.counter16b PORT MAP (
		x"0000",
		'0',
		clk_4hz,
		'0',
		out16b
		);

	-- delicka frekvence pro pocitani

	divider4hz : ENTITY work.freqdiv GENERIC MAP (freqout => 4) PORT MAP (clk => clk_50, clkout => clk_4hz);
END ARCHITECTURE;